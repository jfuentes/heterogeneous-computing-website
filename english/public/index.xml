<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Heterogeneous Computing</title>
    <link>http://www.face.ubiobio.cl/~jfuentes/classes/hc/</link>
    <description>Recent content on Heterogeneous Computing</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="http://www.face.ubiobio.cl/~jfuentes/classes/hc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DPC&#43;&#43;</title>
      <link>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit2/dpcpp/</link>
      <pubDate>Sun, 12 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit2/dpcpp/</guid>
      <description>Links:
  Data Parallel C++ Book
  Examples in C++
  Examples in DPC++
  Always use in code:
#include &amp;lt;CL/sycl.hpp&amp;gt; Using namespace sycl; 1. Memory Management  Malloc To manage memory use a pointer-based approach, more specifically Malloc. For example, create memory location to share:
char *example = malloc_shared&amp;lt;char&amp;gt;(variable,queue); In SYCL you can use 3 types: malloc_host, malloc_shared and malloc_device:
int* host_array = malloc_host(N, Q); int* shared_array = malloc_shared(N, Q); int* device_array = malloc_device(N, Q); Characteristics:</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit1/intro/</link>
      <pubDate>Sun, 12 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit1/intro/</guid>
      <description>Presentation of the course and its syllabus, semester schedule, and administrative information.
1-intro.pdf
Overview of heterogeneous architectures, their history and evolution over time.
2-intro_architectures.pdf
#the-canvas {border: 1px solid black;direction: ltr;width: 100%;height: auto;display: none;}#paginator {display: none;text-align: center;margin-bottom: 10px;}#loadingWrapper {display: none;justify-content: center;align-items: center;width: 100%;height: 350px;}#loading {display: inline-block;width: 50px;height: 50px;border: 3px solid #d2d0d0;;border-radius: 50%;border-top-color: #383838;animation: spin 1s ease-in-out infinite;-webkit-animation: spin 1s ease-in-out infinite;}@keyframes spin {to { -webkit-transform: rotate(360deg); }}@-webkit-keyframes spin {to { -webkit-transform: rotate(360deg); }}PreviousNext&amp;nbsp; &amp;nbsp;Page:  / window.</description>
    </item>
    
    <item>
      <title>Lab 1</title>
      <link>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit2/lab1/</link>
      <pubDate>Sun, 12 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit2/lab1/</guid>
      <description>Laboratorio 1</description>
    </item>
    
    <item>
      <title>Compute Models</title>
      <link>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit2/compute_models/</link>
      <pubDate>Sat, 11 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit2/compute_models/</guid>
      <description>In this session we review different compute models used in modern computer machines. We begin with the Flynn&amp;rsquo;s taxonomy, and look at the evolution of models used in modern architectures.
7-compute_models.pdf
#the-canvas {border: 1px solid black;direction: ltr;width: 100%;height: auto;display: none;}#paginator {display: none;text-align: center;margin-bottom: 10px;}#loadingWrapper {display: none;justify-content: center;align-items: center;width: 100%;height: 350px;}#loading {display: inline-block;width: 50px;height: 50px;border: 3px solid #d2d0d0;;border-radius: 50%;border-top-color: #383838;animation: spin 1s ease-in-out infinite;-webkit-animation: spin 1s ease-in-out infinite;}@keyframes spin {to { -webkit-transform: rotate(360deg); }}@-webkit-keyframes spin {to { -webkit-transform: rotate(360deg); }}PreviousNext&amp;nbsp; &amp;nbsp;Page:  / window.</description>
    </item>
    
    <item>
      <title>Project</title>
      <link>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit2/project/</link>
      <pubDate>Sun, 12 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit2/project/</guid>
      <description>Programming Project</description>
    </item>
    
    <item>
      <title>DevCloud</title>
      <link>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit2/devcloud/</link>
      <pubDate>Sat, 11 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit2/devcloud/</guid>
      <description>VS Code + DevCloud Configuration The step-by-step guide to connect to DevCloud using VS Code is available here.
 Setting up the SSH Config  Download the auto config file customized for your account, available on the guide&amp;rsquo;s website. Open a terminal that supports bash in the location of the downloaded file and execute the following command: bash setup-devcloud-access-XXXXX.txt, where XXXXX is your user&amp;rsquo;s ID. For safety reasons, remove the downloaded file.</description>
    </item>
    
    <item>
      <title>Programming Frameworks</title>
      <link>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit2/frameworks/</link>
      <pubDate>Sat, 11 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit2/frameworks/</guid>
      <description>In this session we study two of the main programming frameworks for modern architectures: CUDA and SYCL.
8-frameworks.pdf
#the-canvas {border: 1px solid black;direction: ltr;width: 100%;height: auto;display: none;}#paginator {display: none;text-align: center;margin-bottom: 10px;}#loadingWrapper {display: none;justify-content: center;align-items: center;width: 100%;height: 350px;}#loading {display: inline-block;width: 50px;height: 50px;border: 3px solid #d2d0d0;;border-radius: 50%;border-top-color: #383838;animation: spin 1s ease-in-out infinite;-webkit-animation: spin 1s ease-in-out infinite;}@keyframes spin {to { -webkit-transform: rotate(360deg); }}@-webkit-keyframes spin {to { -webkit-transform: rotate(360deg); }}PreviousNext&amp;nbsp; &amp;nbsp;Page:  / window.</description>
    </item>
    
    <item>
      <title>Memory Hierarchy</title>
      <link>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit1/memoria/</link>
      <pubDate>Sat, 11 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit1/memoria/</guid>
      <description>In this session we review fundamental concepts about computer system memories. We focus on SRAM and DRAM memories that are part of the memory hierarchy of modern processors and accelerators.
3-memory.pdf
#the-canvas {border: 1px solid black;direction: ltr;width: 100%;height: auto;display: none;}#paginator {display: none;text-align: center;margin-bottom: 10px;}#loadingWrapper {display: none;justify-content: center;align-items: center;width: 100%;height: 350px;}#loading {display: inline-block;width: 50px;height: 50px;border: 3px solid #d2d0d0;;border-radius: 50%;border-top-color: #383838;animation: spin 1s ease-in-out infinite;-webkit-animation: spin 1s ease-in-out infinite;}@keyframes spin {to { -webkit-transform: rotate(360deg); }}@-webkit-keyframes spin {to { -webkit-transform: rotate(360deg); }}PreviousNext&amp;nbsp; &amp;nbsp;Page:  / window.</description>
    </item>
    
    <item>
      <title>OneAPI</title>
      <link>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit2/oneapi/</link>
      <pubDate>Sat, 11 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit2/oneapi/</guid>
      <description>In this session we introduce OneAPI and the Devcloud.
9-devcloud.pdf
#the-canvas {border: 1px solid black;direction: ltr;width: 100%;height: auto;display: none;}#paginator {display: none;text-align: center;margin-bottom: 10px;}#loadingWrapper {display: none;justify-content: center;align-items: center;width: 100%;height: 350px;}#loading {display: inline-block;width: 50px;height: 50px;border: 3px solid #d2d0d0;;border-radius: 50%;border-top-color: #383838;animation: spin 1s ease-in-out infinite;-webkit-animation: spin 1s ease-in-out infinite;}@keyframes spin {to { -webkit-transform: rotate(360deg); }}@-webkit-keyframes spin {to { -webkit-transform: rotate(360deg); }}PreviousNext&amp;nbsp; &amp;nbsp;Page:  / window.</description>
    </item>
    
    <item>
      <title>Multi-core CPU</title>
      <link>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit1/cpu/</link>
      <pubDate>Sun, 12 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit1/cpu/</guid>
      <description>In this session we review the multi-core CPU architecture. Advantages and main challenges are presented.
4-multicore_cpu.pdf
#the-canvas {border: 1px solid black;direction: ltr;width: 100%;height: auto;display: none;}#paginator {display: none;text-align: center;margin-bottom: 10px;}#loadingWrapper {display: none;justify-content: center;align-items: center;width: 100%;height: 350px;}#loading {display: inline-block;width: 50px;height: 50px;border: 3px solid #d2d0d0;;border-radius: 50%;border-top-color: #383838;animation: spin 1s ease-in-out infinite;-webkit-animation: spin 1s ease-in-out infinite;}@keyframes spin {to { -webkit-transform: rotate(360deg); }}@-webkit-keyframes spin {to { -webkit-transform: rotate(360deg); }}PreviousNext&amp;nbsp; &amp;nbsp;Page:  / window.</description>
    </item>
    
    <item>
      <title>GPU</title>
      <link>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit1/gpu/</link>
      <pubDate>Sun, 12 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit1/gpu/</guid>
      <description>In this session we review the GPU architecture, with special focus on hardware products from Nvidia, AMD and Intel. Their advantages, main features and challenges are presented.
5-gpu.pdf
#the-canvas {border: 1px solid black;direction: ltr;width: 100%;height: auto;display: none;}#paginator {display: none;text-align: center;margin-bottom: 10px;}#loadingWrapper {display: none;justify-content: center;align-items: center;width: 100%;height: 350px;}#loading {display: inline-block;width: 50px;height: 50px;border: 3px solid #d2d0d0;;border-radius: 50%;border-top-color: #383838;animation: spin 1s ease-in-out infinite;-webkit-animation: spin 1s ease-in-out infinite;}@keyframes spin {to { -webkit-transform: rotate(360deg); }}@-webkit-keyframes spin {to { -webkit-transform: rotate(360deg); }}PreviousNext&amp;nbsp; &amp;nbsp;Page:  / window.</description>
    </item>
    
    <item>
      <title>FPGA</title>
      <link>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit1/fpga/</link>
      <pubDate>Sun, 12 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit1/fpga/</guid>
      <description>In this session we review the FPGA architecture. Advantages and main features and challenges are presented.
6-fpga.pdf
#the-canvas {border: 1px solid black;direction: ltr;width: 100%;height: auto;display: none;}#paginator {display: none;text-align: center;margin-bottom: 10px;}#loadingWrapper {display: none;justify-content: center;align-items: center;width: 100%;height: 350px;}#loading {display: inline-block;width: 50px;height: 50px;border: 3px solid #d2d0d0;;border-radius: 50%;border-top-color: #383838;animation: spin 1s ease-in-out infinite;-webkit-animation: spin 1s ease-in-out infinite;}@keyframes spin {to { -webkit-transform: rotate(360deg); }}@-webkit-keyframes spin {to { -webkit-transform: rotate(360deg); }}PreviousNext&amp;nbsp; &amp;nbsp;Page:  / window.</description>
    </item>
    
  </channel>
</rss>
